{
  "version": 3,
  "sources": ["../../../../../../node_modules/@capacitor/barcode-scanner/dist/esm/web.js"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { CapacitorBarcodeScannerScanOrientation } from './definitions';\n/**\n * Implements OSBarcodePlugin to provide web functionality for barcode scanning.\n */\nexport class CapacitorBarcodeScannerWeb extends WebPlugin {\n  /**\n   * Stops the barcode scanner and hides its UI.\n   * @private\n   * @returns {Promise<void>} A promise that resolves when the scanner has stopped and its UI is hidden.\n   */\n  async stopAndHideScanner() {\n    console.log(window.OSBarcodeWebScanner);\n    if (window.OSBarcodeWebScanner) {\n      await window.OSBarcodeWebScanner.stop();\n      window.OSBarcodeWebScanner = null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    document.getElementById('cap-os-barcode-scanner-container-dialog').style.display = 'none';\n  }\n  /**\n   * Builds the HTML elements necessary for the barcode scanner UI.\n   * This method checks if the scanner container exists before creating it to avoid duplicates.\n   * It also sets up the close button to stop and hide the scanner on click.\n   * @private\n   */\n  buildScannerElement() {\n    if (document.getElementById('cap-os-barcode-scanner-container')) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      document.getElementById('cap-os-barcode-scanner-container').className = 'scanner-container-display';\n      return;\n    }\n    // Create and configure scanner container elements\n    const caposbarcodescannercontainer = document.body.appendChild(document.createElement('div'));\n    caposbarcodescannercontainer.id = 'cap-os-barcode-scanner-container';\n    const caposbarcodescannercontainerdialog = document.createElement('div');\n    caposbarcodescannercontainerdialog.id = 'cap-os-barcode-scanner-container-dialog';\n    caposbarcodescannercontainerdialog.className = 'scanner-dialog';\n    // Inner dialog elements including the close button and scanner view\n    const caposbarcodescannercontainerdialoginner = document.createElement('div');\n    caposbarcodescannercontainerdialoginner.className = 'scanner-dialog-inner';\n    const caposbarcodescannercontainerdialoginnerclose = document.createElement('span');\n    caposbarcodescannercontainerdialoginnerclose.className = 'close-button';\n    caposbarcodescannercontainerdialoginnerclose.innerHTML = '&times;';\n    caposbarcodescannercontainerdialoginner.appendChild(caposbarcodescannercontainerdialoginnerclose);\n    const caposbarcodescannercontainerdialoginnercontainerp = document.createElement('p');\n    caposbarcodescannercontainerdialoginnercontainerp.innerHTML = '&nbsp;';\n    caposbarcodescannercontainerdialoginner.appendChild(caposbarcodescannercontainerdialoginnercontainerp);\n    const caposbarcodescannercontainerdialoginnercontainer = document.createElement('div');\n    caposbarcodescannercontainerdialoginnercontainer.className = 'scanner-container-full-width';\n    caposbarcodescannercontainerdialoginnercontainer.id = 'cap-os-barcode-scanner-container-scanner';\n    caposbarcodescannercontainerdialoginner.appendChild(caposbarcodescannercontainerdialoginnercontainer);\n    caposbarcodescannercontainerdialog.appendChild(caposbarcodescannercontainerdialoginner);\n    caposbarcodescannercontainer.appendChild(caposbarcodescannercontainerdialog);\n    caposbarcodescannercontainerdialoginnerclose.onclick = this.stopAndHideScanner;\n  }\n  /**\n   * Initiates a barcode scan using the user's camera and HTML5 QR code scanner.\n   * Displays the scanner UI and waits for a scan to complete or fail.\n   * @param {OSBarcodeScanOptions} options Configuration options for the scan, including camera direction and UI preferences.\n   * @returns {Promise<OSBarcodeScanResult>} A promise that resolves with the scan result or rejects with an error.\n   */\n  async scanBarcode(options) {\n    this.buildScannerElement();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    document.getElementById('cap-os-barcode-scanner-container-dialog').style.display = 'block';\n    return new Promise((resolve, reject) => {\n      var _a, _b;\n      const param = {\n        facingMode: options.cameraDirection === 1 ? 'environment' : 'user',\n        hasScannerButton: false,\n        scanButton: options.scanButton === undefined ? false : options.scanButton,\n        showScanLine: false,\n        scanInstructions: options.scanInstructions ? options.scanInstructions : '',\n        orientation: options.scanOrientation ? options.scanOrientation : CapacitorBarcodeScannerScanOrientation.PORTRAIT,\n        showCameraSelection: ((_a = options.web) === null || _a === void 0 ? void 0 : _a.showCameraSelection) ? options.web.showCameraSelection : false,\n        typeHint: options.hint === 17 ? undefined : options.hint,\n        scannerFPS: ((_b = options.web) === null || _b === void 0 ? void 0 : _b.scannerFPS) ? options.web.scannerFPS : 50\n      };\n      // Set up and start the scanner\n      const scannerElement = document.getElementById('cap-os-barcode-scanner-container-scanner');\n      if (!scannerElement) {\n        throw new Error('Scanner Element is required for web');\n      }\n      window.OSBarcodeWebScanner = new Html5Qrcode(scannerElement.id);\n      const Html5QrcodeConfig = {\n        fps: param.scannerFPS,\n        qrbox: scannerElement.getBoundingClientRect().width * (9 / 16) - 10,\n        aspectRatio: 16 / 9,\n        videoConstraints: {\n          focusMode: 'continuous',\n          height: {\n            min: 576,\n            ideal: 1920\n          },\n          deviceId: undefined,\n          facingMode: undefined\n        }\n      };\n      // Success and error callbacks for the scanner\n      const OSBarcodeWebScannerSuccessCallback = (decodedText, _decodedResult) => {\n        this.stopAndHideScanner();\n        resolve({\n          ScanResult: decodedText\n        });\n      };\n      const OSBarcodeWebScannerErrorCallback = error => {\n        if (error.indexOf('NotFoundException') === -1 && error.indexOf('No barcode or QR code detected') === -1) {\n          this.stopAndHideScanner();\n          console.error(`[Scanner Web Error] ${error}`);\n          reject(error);\n        }\n      };\n      window.OSBarcodeWebScanner.start({\n        facingMode: param.facingMode\n      }, Html5QrcodeConfig, OSBarcodeWebScannerSuccessCallback, OSBarcodeWebScannerErrorCallback);\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMO,IAAM,6BAAN,cAAyC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlD,qBAAqB;AAAA;AACzB,cAAQ,IAAI,OAAO,mBAAmB;AACtC,UAAI,OAAO,qBAAqB;AAC9B,cAAM,OAAO,oBAAoB,KAAK;AACtC,eAAO,sBAAsB;AAAA,MAC/B;AAEA,eAAS,eAAe,yCAAyC,EAAE,MAAM,UAAU;AAAA,IACrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,sBAAsB;AACpB,QAAI,SAAS,eAAe,kCAAkC,GAAG;AAE/D,eAAS,eAAe,kCAAkC,EAAE,YAAY;AACxE;AAAA,IACF;AAEA,UAAM,+BAA+B,SAAS,KAAK,YAAY,SAAS,cAAc,KAAK,CAAC;AAC5F,iCAA6B,KAAK;AAClC,UAAM,qCAAqC,SAAS,cAAc,KAAK;AACvE,uCAAmC,KAAK;AACxC,uCAAmC,YAAY;AAE/C,UAAM,0CAA0C,SAAS,cAAc,KAAK;AAC5E,4CAAwC,YAAY;AACpD,UAAM,+CAA+C,SAAS,cAAc,MAAM;AAClF,iDAA6C,YAAY;AACzD,iDAA6C,YAAY;AACzD,4CAAwC,YAAY,4CAA4C;AAChG,UAAM,oDAAoD,SAAS,cAAc,GAAG;AACpF,sDAAkD,YAAY;AAC9D,4CAAwC,YAAY,iDAAiD;AACrG,UAAM,mDAAmD,SAAS,cAAc,KAAK;AACrF,qDAAiD,YAAY;AAC7D,qDAAiD,KAAK;AACtD,4CAAwC,YAAY,gDAAgD;AACpG,uCAAmC,YAAY,uCAAuC;AACtF,iCAA6B,YAAY,kCAAkC;AAC3E,iDAA6C,UAAU,KAAK;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOM,YAAY,SAAS;AAAA;AACzB,WAAK,oBAAoB;AAEzB,eAAS,eAAe,yCAAyC,EAAE,MAAM,UAAU;AACnF,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAI,IAAI;AACR,cAAM,QAAQ;AAAA,UACZ,YAAY,QAAQ,oBAAoB,IAAI,gBAAgB;AAAA,UAC5D,kBAAkB;AAAA,UAClB,YAAY,QAAQ,eAAe,SAAY,QAAQ,QAAQ;AAAA,UAC/D,cAAc;AAAA,UACd,kBAAkB,QAAQ,mBAAmB,QAAQ,mBAAmB;AAAA,UACxE,aAAa,QAAQ,kBAAkB,QAAQ,kBAAkB,uCAAuC;AAAA,UACxG,uBAAuB,KAAK,QAAQ,SAAS,QAAQ,OAAO,SAAS,SAAS,GAAG,uBAAuB,QAAQ,IAAI,sBAAsB;AAAA,UAC1I,UAAU,QAAQ,SAAS,KAAK,SAAY,QAAQ;AAAA,UACpD,cAAc,KAAK,QAAQ,SAAS,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,QAAQ,IAAI,aAAa;AAAA,QACjH;AAEA,cAAM,iBAAiB,SAAS,eAAe,0CAA0C;AACzF,YAAI,CAAC,gBAAgB;AACnB,gBAAM,IAAI,MAAM,qCAAqC;AAAA,QACvD;AACA,eAAO,sBAAsB,IAAI,YAAY,eAAe,EAAE;AAC9D,cAAM,oBAAoB;AAAA,UACxB,KAAK,MAAM;AAAA,UACX,OAAO,eAAe,sBAAsB,EAAE,SAAS,IAAI,MAAM;AAAA,UACjE,aAAa,KAAK;AAAA,UAClB,kBAAkB;AAAA,YAChB,WAAW;AAAA,YACX,QAAQ;AAAA,cACN,KAAK;AAAA,cACL,OAAO;AAAA,YACT;AAAA,YACA,UAAU;AAAA,YACV,YAAY;AAAA,UACd;AAAA,QACF;AAEA,cAAM,qCAAqC,CAAC,aAAa,mBAAmB;AAC1E,eAAK,mBAAmB;AACxB,kBAAQ;AAAA,YACN,YAAY;AAAA,UACd,CAAC;AAAA,QACH;AACA,cAAM,mCAAmC,WAAS;AAChD,cAAI,MAAM,QAAQ,mBAAmB,MAAM,MAAM,MAAM,QAAQ,gCAAgC,MAAM,IAAI;AACvG,iBAAK,mBAAmB;AACxB,oBAAQ,MAAM,uBAAuB,KAAK,EAAE;AAC5C,mBAAO,KAAK;AAAA,UACd;AAAA,QACF;AACA,eAAO,oBAAoB,MAAM;AAAA,UAC/B,YAAY,MAAM;AAAA,QACpB,GAAG,mBAAmB,oCAAoC,gCAAgC;AAAA,MAC5F,CAAC;AAAA,IACH;AAAA;AACF;",
  "names": []
}
